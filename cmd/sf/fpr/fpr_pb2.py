# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: fpr.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='fpr.proto',
  package='fpr',
  syntax='proto3',
  serialized_pb=_b('\n\tfpr.proto\x12\x03\x66pr\"\x17\n\x07Request\x12\x0c\n\x04path\x18\x01 \x01(\t\"$\n\x05Reply\x12\x0c\n\x04puid\x18\x01 \x01(\t\x12\r\n\x05\x65rror\x18\x02 \x01(\t2-\n\x03\x46pr\x12&\n\x08Identify\x12\x0c.fpr.Request\x1a\n.fpr.Reply\"\x00\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_REQUEST = _descriptor.Descriptor(
  name='Request',
  full_name='fpr.Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='fpr.Request.path', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18,
  serialized_end=41,
)


_REPLY = _descriptor.Descriptor(
  name='Reply',
  full_name='fpr.Reply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='puid', full_name='fpr.Reply.puid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='error', full_name='fpr.Reply.error', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=43,
  serialized_end=79,
)

DESCRIPTOR.message_types_by_name['Request'] = _REQUEST
DESCRIPTOR.message_types_by_name['Reply'] = _REPLY

Request = _reflection.GeneratedProtocolMessageType('Request', (_message.Message,), dict(
  DESCRIPTOR = _REQUEST,
  __module__ = 'fpr_pb2'
  # @@protoc_insertion_point(class_scope:fpr.Request)
  ))
_sym_db.RegisterMessage(Request)

Reply = _reflection.GeneratedProtocolMessageType('Reply', (_message.Message,), dict(
  DESCRIPTOR = _REPLY,
  __module__ = 'fpr_pb2'
  # @@protoc_insertion_point(class_scope:fpr.Reply)
  ))
_sym_db.RegisterMessage(Reply)


import abc
from grpc.early_adopter import implementations
from grpc.framework.alpha import utilities
class EarlyAdopterFprServicer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def Identify(self, request, context):
    raise NotImplementedError()
class EarlyAdopterFprServer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def start(self):
    raise NotImplementedError()
  @abc.abstractmethod
  def stop(self):
    raise NotImplementedError()
class EarlyAdopterFprStub(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def Identify(self, request):
    raise NotImplementedError()
  Identify.async = None
def early_adopter_create_Fpr_server(servicer, port, private_key=None, certificate_chain=None):
  import fpr_pb2
  import fpr_pb2
  method_service_descriptions = {
    "Identify": utilities.unary_unary_service_description(
      servicer.Identify,
      fpr_pb2.Request.FromString,
      fpr_pb2.Reply.SerializeToString,
    ),
  }
  return implementations.server("fpr.Fpr", method_service_descriptions, port, private_key=private_key, certificate_chain=certificate_chain)
def early_adopter_create_Fpr_stub(host, port, metadata_transformer=None, secure=False, root_certificates=None, private_key=None, certificate_chain=None, server_host_override=None):
  import fpr_pb2
  import fpr_pb2
  method_invocation_descriptions = {
    "Identify": utilities.unary_unary_invocation_description(
      fpr_pb2.Request.SerializeToString,
      fpr_pb2.Reply.FromString,
    ),
  }
  return implementations.stub("fpr.Fpr", method_invocation_descriptions, host, port, metadata_transformer=metadata_transformer, secure=secure, root_certificates=root_certificates, private_key=private_key, certificate_chain=certificate_chain, server_host_override=server_host_override)
# @@protoc_insertion_point(module_scope)
